---
- name: Ensure dirs exists with correct perms
  file:
    dest: "{{ dirpath }}"
    state: directory
    owner: "{{ rclone_owner }}"
    group: "{{ rclone_group }}"
    recurse: no
  become: yes
  with_items:
    - "{{ rclone_src_dir }}"
    - "{{ rclone_bin_dir }}"
  loop_control:
    loop_var: dirpath

- name: install rclone - unzip package
  unarchive:
    src: https://github.com/ncw/rclone/releases/download/{{ rclone_version }}/{{ rclone_file }}.zip
    dest: "{{ rclone_src_dir}}"
    copy: no
    creates: '{{ rclone_src_dir}}/{{ rclone_file }}'
  become: yes

- name: Collect list of old versions downloaded
  find:
    paths: "{{ rclone_src_dir}}"
    hidden: true
    recurse: false
    file_type: directory
  register: __rclone_collected_directories

- name: Remove old versions
  file:
    path: "{{ item.path }}"
    state: absent
  when: item.path != rclone_src_dir + '/' + rclone_file
  with_items: "{{ __rclone_collected_directories.files }}"

- name: install rclone - copy binary
  copy:
    src: "{{ rclone_src_dir}}/{{ rclone_file }}/rclone"
    dest: "{{ rclone_bin_dir }}/rclone"
    mode: 0755
    owner: "{{ rclone_owner }}"
    group: "{{ rclone_group }}"
    remote_src: true
  become: yes

- name: Install man pages
  block: 
    - name: install rclone - make dir for local manpages
      file:
        path: '{{ rclone_man_pages_path }}'
        state: directory
        mode: 0775
        owner: '{{ rclone_man_pages_owner }}'
        group: '{{ rclone_man_pages_group }}'
      become: yes

    - name: install rclone - copy manpage
      copy:
        src: "{{ rclone_src_dir}}/{{ rclone_file }}/rclone.1"
        dest: "{{ rclone_man_pages_path }}/rclone.1"
        mode: 0644
        owner: root
        group: root
        remote_src: true
      notify: update mandb
      become: yes
  when: rclone_man_pages_install